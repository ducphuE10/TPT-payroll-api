"""fix code length

Revision ID: dae710276827
Revises: fd8ab30d5729
Create Date: 2024-10-03 01:01:42.473444

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "dae710276827"
down_revision: Union[str, None] = "fd8ab30d5729"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "contract_histories_employee_id_fkey", "contract_histories", type_="foreignkey"
    )
    op.alter_column(
        "contract_histories",
        "employee_id",
        existing_type=sa.VARCHAR(length=20),
        type_=sa.Integer(),
        existing_nullable=False,
        postgresql_using="employee_id::integer",
    )

    op.create_foreign_key(
        None, "contract_histories", "employees", ["employee_id"], ["id"]
    )
    op.alter_column(
        "departments",
        "code",
        existing_type=sa.VARCHAR(length=20),
        type_=sa.String(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "dependants",
        "code",
        existing_type=sa.VARCHAR(length=20),
        type_=sa.String(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "employees",
        "code",
        existing_type=sa.VARCHAR(length=20),
        type_=sa.String(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "insurance_policies",
        "code",
        existing_type=sa.VARCHAR(length=20),
        type_=sa.String(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "positions",
        "code",
        existing_type=sa.VARCHAR(length=20),
        type_=sa.String(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "code",
        existing_type=sa.VARCHAR(length=20),
        type_=sa.String(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "shifts",
        "code",
        existing_type=sa.VARCHAR(length=20),
        type_=sa.String(length=30),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "shifts",
        "code",
        existing_type=sa.String(length=30),
        type_=sa.VARCHAR(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "code",
        existing_type=sa.String(length=30),
        type_=sa.VARCHAR(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "positions",
        "code",
        existing_type=sa.String(length=30),
        type_=sa.VARCHAR(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "insurance_policies",
        "code",
        existing_type=sa.String(length=30),
        type_=sa.VARCHAR(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "employees",
        "code",
        existing_type=sa.String(length=30),
        type_=sa.VARCHAR(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "dependants",
        "code",
        existing_type=sa.String(length=30),
        type_=sa.VARCHAR(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "departments",
        "code",
        existing_type=sa.String(length=30),
        type_=sa.VARCHAR(length=20),
        existing_nullable=False,
    )
    op.drop_constraint(None, "contract_histories", type_="foreignkey")
    op.create_foreign_key(
        "contract_histories_employee_id_fkey",
        "contract_histories",
        "employees",
        ["employee_id"],
        ["code"],
    )
    op.alter_column(
        "contract_histories",
        "employee_id",
        existing_type=sa.Integer(),
        type_=sa.VARCHAR(length=20),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
