"""update dependant table

Revision ID: 79e9538b3349
Revises: 7862e88fec25
Create Date: 2024-09-27 11:19:05.769415

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "79e9538b3349"
down_revision: Union[str, None] = "7862e88fec25"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    iddoctype = sa.Enum(
        "CMND", "CCCD", "GIAYKHAISINH", "HOCHIEU", "OTHER", name="iddoctype"
    )
    iddoctype.create(
        op.get_bind()
    )  # This explicitly creates the enum type in the database
    dependantrelationship = sa.Enum(
        "CHILD", "PARENT", "COUPLE", "OTHER", name="dependantrelationship"
    )
    dependantrelationship.create(op.get_bind())

    # Add the column with the enum type

    op.alter_column(
        "addendums",
        "code",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "addendums",
        "name",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "contracts",
        "code",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "contracts",
        "name",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "contracts",
        "employee_code",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "departments",
        "code",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "departments",
        "name",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.add_column(
        "dependants",
        sa.Column("id_doc_type", iddoctype, nullable=True, server_default=None),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "doc_number", sa.String(length=30), nullable=False, server_default="UNKNOWN"
        ),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "relationship",
            dependantrelationship,
            nullable=False,
            server_default="OTHER",
        ),
    )
    op.alter_column(
        "dependants",
        "id_doc_type",
        nullable=False,  # Enforce non-null constraint
        server_default=None,  # Remove default if no longer needed
    )
    op.add_column("dependants", sa.Column("deduction_from", sa.Date(), nullable=False))
    op.add_column("dependants", sa.Column("deduction_to", sa.Date(), nullable=False))
    op.alter_column(
        "dependants",
        "code",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "dependants",
        "name",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.drop_constraint("dependants_cccd_key", "dependants", type_="unique")
    op.drop_column("dependants", "temp_addr")
    op.drop_column("dependants", "nationality")
    op.drop_column("dependants", "cccd_date")
    op.drop_column("dependants", "bank_account")
    op.drop_column("dependants", "cccd")
    op.drop_column("dependants", "ethnic")
    op.drop_column("dependants", "hospital_info")
    op.drop_column("dependants", "religion")
    op.drop_column("dependants", "gender")
    op.drop_column("dependants", "bank_name")
    op.drop_column("dependants", "kcb_number")
    op.drop_column("dependants", "academic_level")
    op.drop_column("dependants", "permanent_addr")
    op.drop_column("dependants", "cccd_place")
    op.drop_column("dependants", "email")
    op.drop_column("dependants", "domicile")
    op.drop_column("dependants", "bank_holder_name")
    op.alter_column(
        "employees",
        "code",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "employees",
        "name",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "insurance_policies",
        "code",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "insurance_policies",
        "name",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "positions",
        "code",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "positions",
        "name",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "code",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "name",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "shifts",
        "code",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "shifts",
        "name",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "tax_policies",
        "code",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.String(length=20),
        existing_nullable=False,
    )
    op.alter_column(
        "tax_policies",
        "name",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "tax_policies",
        "name",
        existing_type=sa.String(length=50),
        type_=sa.VARCHAR(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "tax_policies",
        "code",
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "shifts",
        "name",
        existing_type=sa.String(length=50),
        type_=sa.VARCHAR(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "shifts",
        "code",
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "name",
        existing_type=sa.String(length=50),
        type_=sa.VARCHAR(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "schedules",
        "code",
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "positions",
        "name",
        existing_type=sa.String(length=50),
        type_=sa.VARCHAR(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "positions",
        "code",
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "insurance_policies",
        "name",
        existing_type=sa.String(length=50),
        type_=sa.VARCHAR(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "insurance_policies",
        "code",
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "employees",
        "name",
        existing_type=sa.String(length=50),
        type_=sa.VARCHAR(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "employees",
        "code",
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    op.add_column(
        "dependants",
        sa.Column(
            "bank_holder_name",
            sa.VARCHAR(length=30),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "domicile", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "dependants",
        sa.Column("email", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "cccd_place", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "permanent_addr", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "academic_level", sa.VARCHAR(length=30), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "kcb_number", sa.VARCHAR(length=30), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "bank_name", sa.VARCHAR(length=30), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "gender",
            postgresql.ENUM("Male", "Female", name="gender"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "religion", sa.VARCHAR(length=30), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "hospital_info", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "dependants",
        sa.Column("ethnic", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "dependants",
        sa.Column("cccd", sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "bank_account", sa.VARCHAR(length=30), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "dependants",
        sa.Column("cccd_date", sa.DATE(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "nationality",
            postgresql.ENUM("VN", "JP", name="nationality"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "dependants",
        sa.Column(
            "temp_addr", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
    )
    op.create_unique_constraint("dependants_cccd_key", "dependants", ["cccd"])
    op.alter_column(
        "dependants",
        "name",
        existing_type=sa.String(length=50),
        type_=sa.VARCHAR(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "dependants",
        "code",
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    op.drop_column("dependants", "deduction_to")
    op.drop_column("dependants", "deduction_from")
    op.drop_column("dependants", "relationship")
    op.drop_column("dependants", "doc_number")
    op.drop_column("dependants", "id_doc_type")
    op.alter_column(
        "departments",
        "name",
        existing_type=sa.String(length=50),
        type_=sa.VARCHAR(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "departments",
        "code",
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "contracts",
        "employee_code",
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "contracts",
        "name",
        existing_type=sa.String(length=50),
        type_=sa.VARCHAR(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "contracts",
        "code",
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "addendums",
        "name",
        existing_type=sa.String(length=50),
        type_=sa.VARCHAR(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "addendums",
        "code",
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
    op.execute("DROP TYPE iddoctype")
    op.execute("DROP TYPE dependantrelationship")
