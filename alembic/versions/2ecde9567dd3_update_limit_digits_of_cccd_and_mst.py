"""update limit digits of cccd and mst

Revision ID: 2ecde9567dd3
Revises: 8708740d6360
Create Date: 2024-11-14 08:42:11.407496

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text

# revision identifiers, used by Alembic.
revision: str = "2ecde9567dd3"
down_revision: Union[str, None] = "8708740d6360"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()

    # Truncate MST values longer than 10 characters
    connection.execute(
        text(
            """
        UPDATE employees
        SET mst = SUBSTRING(mst, 1, 10)
        WHERE LENGTH(mst) > 10
        """
        )
    )

    # Truncate CCCD values longer than 12 characters
    connection.execute(
        text(
            """
        UPDATE employees
        SET cccd = SUBSTRING(cccd, 1, 12)
        WHERE LENGTH(cccd) > 12
        """
        )
    )

    op.alter_column(
        "employees",
        "mst",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.String(length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "employees",
        "cccd",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.String(length=12),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "employees",
        "cccd",
        existing_type=sa.String(length=12),
        type_=sa.VARCHAR(length=30),
        existing_nullable=False,
    )
    op.alter_column(
        "employees",
        "mst",
        existing_type=sa.String(length=10),
        type_=sa.VARCHAR(length=30),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
