"""update model

Revision ID: 5cd3ab0b4abc
Revises: 4ed5c224a963
Create Date: 2024-08-10 15:23:04.204258

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5cd3ab0b4abc"
down_revision: Union[str, None] = "4ed5c224a963"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("contracts", "end_date", existing_type=sa.DATE(), nullable=True)
    op.alter_column(
        "contracttypes",
        "template",
        existing_type=postgresql.BYTEA(),
        type_=sa.String(length=255),
        existing_nullable=True,
    )
    op.drop_constraint("employees_schedule_id_fkey", "employees", type_="foreignkey")
    op.drop_column("employees", "schedule_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "employees",
        sa.Column("schedule_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "employees_schedule_id_fkey", "employees", "schedules", ["schedule_id"], ["id"]
    )
    op.alter_column(
        "contracttypes",
        "template",
        existing_type=sa.String(length=255),
        type_=postgresql.BYTEA(),
        existing_nullable=True,
    )
    op.alter_column("contracts", "end_date", existing_type=sa.DATE(), nullable=False)
    # ### end Alembic commands ###
