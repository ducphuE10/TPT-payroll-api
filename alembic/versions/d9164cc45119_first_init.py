"""First init

Revision ID: d9164cc45119
Revises:
Create Date: 2025-01-14 17:46:26.951885

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d9164cc45119"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("fullname", sa.String(), nullable=True),
        sa.Column("password", sa.LargeBinary(), nullable=False),
        sa.Column("role", sa.Enum("ADMIN", "USER", name="role"), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "companies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "departments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "insurance_policies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("company_percentage", sa.Float(), nullable=False),
        sa.Column("employee_percentage", sa.Float(), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "positions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "schedules",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("shift_per_day", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "shifts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("standard_work_hours", sa.Float(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "employees",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column("gender", sa.Enum("Male", "Female", name="gender"), nullable=False),
        sa.Column(
            "nationality", sa.Enum("VN", "JP", name="nationality"), nullable=True
        ),
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.Column("position_id", sa.Integer(), nullable=False),
        sa.Column("mst", sa.String(length=10), nullable=False),
        sa.Column("cccd", sa.String(length=12), nullable=False),
        sa.Column("cccd_date", sa.Date(), nullable=False),
        sa.Column("cccd_place", sa.String(length=255), nullable=False),
        sa.Column("permanent_addr", sa.String(length=255), nullable=True),
        sa.Column("phone", sa.String(length=30), nullable=True),
        sa.Column("is_probation", sa.Boolean(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("is_offboard", sa.Boolean(), nullable=False),
        sa.Column("salary", sa.Float(), nullable=False),
        sa.Column("meal_benefit", sa.Float(), nullable=False),
        sa.Column("transportation_benefit", sa.Float(), nullable=False),
        sa.Column("housing_benefit", sa.Float(), nullable=False),
        sa.Column("toxic_benefit", sa.Float(), nullable=False),
        sa.Column("phone_benefit", sa.Float(), nullable=False),
        sa.Column("attendant_benefit", sa.Float(), nullable=False),
        sa.Column("schedule_id", sa.Integer(), nullable=True),
        sa.Column(
            "payment_method",
            sa.Enum("CASH", "BANK", name="paymentmethod"),
            nullable=True,
        ),
        sa.Column("bank_account", sa.String(length=30), nullable=True),
        sa.Column("bank_holder_name", sa.String(length=30), nullable=True),
        sa.Column("bank_name", sa.String(length=30), nullable=True),
        sa.Column("cv", sa.LargeBinary(), nullable=True),
        sa.Column("note", sa.String(length=255), nullable=True),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["position_id"],
            ["positions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["schedule_id"],
            ["schedules.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("cccd"),
        sa.UniqueConstraint("code"),
        sa.UniqueConstraint("mst"),
    )
    op.create_table(
        "schedule_details",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("schedule_id", sa.Integer(), nullable=False),
        sa.Column("shift_id", sa.Integer(), nullable=False),
        sa.Column(
            "day",
            sa.Enum("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun", name="day"),
            nullable=False,
        ),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["schedule_id"], ["schedules.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["shift_id"],
            ["shifts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "schedule_id", "shift_id", "day", name="uq_schedule_shift_day"
        ),
    )
    op.create_table(
        "attendances",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("work_hours", sa.Float(), nullable=False),
        sa.Column("day_attendance", sa.Date(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("is_holiday", sa.Boolean(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.ForeignKeyConstraint(["employee_id"], ["employees.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "employee_id", "day_attendance", name="uq_employee_attendance"
        ),
    )
    op.create_table(
        "contract_histories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.Column("position_id", sa.Integer(), nullable=False),
        sa.Column("is_probation", sa.Boolean(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("salary", sa.Float(), nullable=False),
        sa.Column("meal_benefit", sa.Float(), nullable=False),
        sa.Column("transportation_benefit", sa.Float(), nullable=False),
        sa.Column("housing_benefit", sa.Float(), nullable=False),
        sa.Column("toxic_benefit", sa.Float(), nullable=False),
        sa.Column("phone_benefit", sa.Float(), nullable=False),
        sa.Column("attendant_benefit", sa.Float(), nullable=False),
        sa.Column(
            "contract_type",
            sa.Enum("ADDENDUM", "CONTRACT", name="contracthistorytype"),
            nullable=False,
        ),
        sa.Column("schedule_id", sa.Integer(), nullable=True),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.id"],
        ),
        sa.ForeignKeyConstraint(["employee_id"], ["employees.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["position_id"],
            ["positions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["schedule_id"],
            ["schedules.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "dependants",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column("phone", sa.String(length=30), nullable=True),
        sa.Column("mst", sa.String(length=30), nullable=False),
        sa.Column(
            "id_doc_type",
            sa.Enum(
                "CMND", "CCCD", "GIAYKHAISINH", "HOCHIEU", "OTHER", name="iddoctype"
            ),
            nullable=False,
        ),
        sa.Column("doc_number", sa.String(length=30), nullable=False),
        sa.Column(
            "relationship",
            sa.Enum("CHILD", "PARENT", "COUPLE", "OTHER", name="dependantrelationship"),
            nullable=False,
        ),
        sa.Column("deduction_from", sa.Date(), nullable=False),
        sa.Column("deduction_to", sa.Date(), nullable=False),
        sa.Column("note", sa.String(length=255), nullable=True),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.ForeignKeyConstraint(["employee_id"], ["employees.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
        sa.UniqueConstraint("mst"),
    )
    op.create_table(
        "overtimes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("overtime_hours", sa.Float(), nullable=False),
        sa.Column("day_overtime", sa.Date(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.ForeignKeyConstraint(["employee_id"], ["employees.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("employee_id", "day_overtime", name="uq_employee_overtime"),
    )
    op.create_table(
        "payroll_managements",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("contract_history_id", sa.Integer(), nullable=False),
        sa.Column("insurance_policy_id", sa.Integer(), nullable=True),
        sa.Column("net_income", sa.Float(), nullable=False),
        sa.Column("month", sa.Integer(), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("salary", sa.Float(), nullable=False),
        sa.Column("work_days_standard", sa.Float(), nullable=False),
        sa.Column("work_days", sa.Float(), nullable=False),
        sa.Column("work_days_salary", sa.Float(), nullable=False),
        sa.Column("overtime_1_5x_hours", sa.Float(), nullable=True),
        sa.Column("overtime_1_5x_salary", sa.Float(), nullable=True),
        sa.Column("overtime_2_0x_hours", sa.Float(), nullable=True),
        sa.Column("overtime_2_0x_salary", sa.Float(), nullable=True),
        sa.Column("transportation_benefit_salary", sa.Float(), nullable=False),
        sa.Column("attendant_benefit_salary", sa.Float(), nullable=False),
        sa.Column("housing_benefit_salary", sa.Float(), nullable=False),
        sa.Column("toxic_benefit_salary", sa.Float(), nullable=False),
        sa.Column("phone_benefit_salary", sa.Float(), nullable=False),
        sa.Column("meal_benefit_salary", sa.Float(), nullable=False),
        sa.Column("gross_income", sa.Float(), nullable=False),
        sa.Column("employee_insurance", sa.Float(), nullable=True),
        sa.Column("company_insurance", sa.Float(), nullable=True),
        sa.Column("no_tax_salary", sa.Float(), nullable=False),
        sa.Column("dependant_people", sa.Integer(), nullable=True),
        sa.Column("tax_salary", sa.Float(), nullable=True),
        sa.Column("tax", sa.Float(), nullable=True),
        sa.Column("total_deduction", sa.Float(), nullable=True),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["contract_history_id"],
            ["contract_histories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employees.id"],
        ),
        sa.ForeignKeyConstraint(
            ["insurance_policy_id"],
            ["insurance_policies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("payroll_managements")
    op.drop_table("overtimes")
    op.drop_table("dependants")
    op.drop_table("contract_histories")
    op.drop_table("attendances")
    op.drop_table("schedule_details")
    op.drop_table("employees")
    op.drop_table("shifts")
    op.drop_table("schedules")
    op.drop_table("positions")
    op.drop_table("insurance_policies")
    op.drop_table("departments")
    op.drop_table("companies")
    op.drop_table("users")
    # ### end Alembic commands ###
