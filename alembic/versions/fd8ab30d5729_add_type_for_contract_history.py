"""add type for contract history

Revision ID: fd8ab30d5729
Revises: 726f3020172f
Create Date: 2024-10-02 18:37:13.433876

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "fd8ab30d5729"
down_revision: Union[str, None] = "726f3020172f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    contract_history_type_enum = sa.Enum(
        "ADDENDUM", "CONTRACT", name="contracthistorytype"
    )
    contract_history_type_enum.create(op.get_bind(), checkfirst=True)
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "contract_histories",
        sa.Column(
            "contract_type",
            contract_history_type_enum,
            nullable=False,
        ),
    )
    op.alter_column(
        "contract_histories",
        "payment_method",
        existing_type=postgresql.ENUM("CASH", "BANK", name="paymentmethod"),
        nullable=True,
    )
    op.drop_constraint(
        "contract_histories_code_key", "contract_histories", type_="unique"
    )
    op.drop_column("contract_histories", "code")
    op.drop_column("contract_histories", "name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "contract_histories",
        sa.Column("name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    )
    op.add_column(
        "contract_histories",
        sa.Column("code", sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    )
    op.create_unique_constraint(
        "contract_histories_code_key", "contract_histories", ["code"]
    )
    op.alter_column(
        "contract_histories",
        "payment_method",
        existing_type=postgresql.ENUM("CASH", "BANK", name="paymentmethod"),
        nullable=False,
    )
    op.drop_column("contract_histories", "contract_type")
    contract_history_type_enum = sa.Enum(
        "ADDENDUM", "CONTRACT", name="contracthistorytype"
    )
    contract_history_type_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
