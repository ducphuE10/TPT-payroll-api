"""require cccd_date, cccd_place in employee

Revision ID: 816b2a3426fb
Revises: dabc700f103a
Create Date: 2024-11-01 17:07:43.429465

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "816b2a3426fb"
down_revision: Union[str, None] = "dabc700f103a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Set default values for existing null records
    connection = op.get_bind()

    # Update null cccd_date to current date
    connection.execute(
        sa.text(
            """
        UPDATE employees
        SET cccd_date = CURRENT_DATE
        WHERE cccd_date IS NULL
    """
        )
    )

    # Update null cccd_place to default value
    connection.execute(
        sa.text(
            """
        UPDATE employees
        SET cccd_place = 'Not specified'
        WHERE cccd_place IS NULL
    """
        )
    )
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("employees", "cccd_date", existing_type=sa.DATE(), nullable=False)
    op.alter_column(
        "employees", "cccd_place", existing_type=sa.VARCHAR(length=255), nullable=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "employees", "cccd_place", existing_type=sa.VARCHAR(length=255), nullable=True
    )
    op.alter_column("employees", "cccd_date", existing_type=sa.DATE(), nullable=True)
    # ### end Alembic commands ###
